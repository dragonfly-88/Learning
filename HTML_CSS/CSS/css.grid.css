/*   Grid Vs Flexbox

Grid: 2D layout, újabb feature a flexbox-hoz képest
lehet egy oldalon mindkettőt is használni, de a Grid támogatottsága még nem olyan széles mint a flexbox-é
CanIUse.com -- itt le lehet csekkolni a böngésző támogatottságot

Autoprefixer CSS online  - segéd CSS-eket letölt (vendor prefixes), hogy segítse a feldolgozását */

.example {
    display: -ms-grid;
    display: grid;
}

.example {
    display: -webkit-box;
    display: -ms-flexbox;
    display: -moz-flexbox;
    display: flex;
}


.grid-container {
    display: grid;
    grid-template-columns: 200px 250px;
    grid-auto-rows: minmax(150px, auto);
    grid-gap: 20px;
    justify-items: stretch;
    align-items: stretch;
}

.grid-item-1 {
    align-self: start;
    justify-self: center;
}


/*  
<body>
  <div class="grid-container">
    <div class="grid-item grid-item-1"></div>
    <div class="grid-item grid-item-2"></div>
    <div class="grid-item grid-item-3"></div>
  </div>
*/


#container {
    border: 1px solid black;

    display: grid;
    grid-template-columns: 1fr 2fr 1fr;
    /* grid-template-columns: repeat(3, 1fr); */
    grid-template-rows: minmax(50px, auto);
    grid-template-rows: 200px 300px;
    grid-auto-rows: minmax(100px, auto);
    /* minden további div esetén ezt a méretet veszi fel */
    gap: 10px;
    justify-content: center;
}

.item {
    border: 1px solid black;
}


#special {
    background-color: cadetblue;
    grid-column: 1 / 4;
    /* 1.től a 3. column végéig tartson, a számok a helyközök számozását jelölik */
    grid-column: span 3;
    grid-row: 1 / 3;
    /* 3 oszlopnyi méretet vesz fel */
}